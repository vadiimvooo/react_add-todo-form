{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","findUserById","users","find","requiredTodos","userId","usersFromServer","App","useState","isValidTitle","isValidUserId","info","setInfo","action","method","FormControl","error","TextField","label","variant","value","onChange","event","target","autoComplete","FormHelperText","InputLabel","Select","labelId","MenuItem","disabled","Button","endIcon","type","onClick","preventDefault","titleIsCorrect","currentTitle","buttonCondition","trim","userErrorCondition","newUser","Number","newId","Math","max","findGreatestId","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c736b77.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/types';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { Todo } from '../../types/types';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    title,\n    id,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={`${id}`}\n      className={cn(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo, User } from './types/types';\nimport { TodoList } from './components/TodoList';\n\nconst findUserById = (id: number, users: User[]) => {\n  return users.find(user => user.id === id) || null;\n};\n\nconst requiredTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId, usersFromServer),\n}));\n\nconst findGreatestId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id));\n};\n\nexport const App = () => {\n  const [info, setInfo] = useState({\n    title: '',\n    todos: requiredTodos,\n    userId: '0',\n    isValidTitle: true,\n    isValidUserId: true,\n  });\n\n  const handleClick = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const {\n      title,\n      todos,\n      userId,\n    } = info;\n\n    let titleIsCorrect = true;\n    let currentTitle = title;\n\n    const buttonCondition\n      = userId !== '0' && title !== '' && title.trim() !== '';\n\n    const titleErrorCondition = title === '' || title.trim() === '';\n    const userErrorCondition = userId === '0';\n\n    if (titleErrorCondition) {\n      currentTitle = '';\n      titleIsCorrect = false;\n\n      setInfo({\n        ...info,\n        title: currentTitle,\n        isValidTitle: titleIsCorrect,\n      });\n    }\n\n    if (userErrorCondition) {\n      setInfo({\n        ...info,\n        title: currentTitle,\n        isValidTitle: titleIsCorrect,\n        isValidUserId: false,\n      });\n    }\n\n    if (buttonCondition) {\n      const newUser = findUserById(Number(userId), usersFromServer);\n      const newId = findGreatestId(todos) + 1;\n      const newTodo: Todo = {\n        id: newId,\n        title,\n        completed: false,\n        userId: newUser ? newUser.id : null,\n        user: newUser,\n      };\n\n      setInfo({\n        ...info,\n        userId: '0',\n        todos: [...todos, newTodo],\n        title: '',\n      });\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInfo({\n      ...info,\n      title: event.target.value,\n      isValidTitle: true,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"App__form\"\n      >\n        <div className=\"App__field\">\n          <FormControl error={!info.isValidTitle}>\n            <TextField\n              id=\"outlined-error-helper-text\"\n              label=\"Title\"\n              variant=\"outlined\"\n              className=\"App__input\"\n              value={info.title}\n              onChange={handleTitleChange}\n              autoComplete=\"off\"\n              data-cy=\"titleInput\"\n              error={!info.isValidTitle}\n            />\n            <FormHelperText className={cn(\n              { 'title-error': info.isValidTitle },\n            )}\n            >\n              Please choose a user\n            </FormHelperText>\n          </FormControl>\n\n        </div>\n\n        <div className=\"App__field\">\n\n          <FormControl error={!info.isValidUserId}>\n            <InputLabel id=\"demo-simple-select-helper-label\">\n              User\n            </InputLabel>\n\n            <Select\n              labelId=\"demo-simple-select-helper-label\"\n              id=\"demo-simple-select-helper\"\n              value={info.userId}\n              label=\"User\"\n              className=\"App__input\"\n              onChange={event => {\n                setInfo({\n                  ...info,\n                  userId: event.target.value,\n                  isValidUserId: true,\n                });\n              }}\n            >\n              <MenuItem value=\"0\" disabled>\n                <em>Choose a user</em>\n              </MenuItem>\n\n              {usersFromServer.map(user => (\n                <MenuItem key={user.id} value={`${user.id}`}>\n                  {user.name}\n                </MenuItem>\n              ))}\n\n            </Select>\n\n            <FormHelperText className={cn(\n              { 'user-error': info.isValidUserId },\n            )}\n            >\n              Please choose a user\n            </FormHelperText>\n          </FormControl>\n        </div>\n\n        <Button\n          variant=\"contained\"\n          endIcon={<SendIcon />}\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleClick}\n          className=\"App__Button\"\n        >\n          Send\n        </Button>\n\n      </form>\n\n      <TodoList todos={info.todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}